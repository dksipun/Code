Printing//
System.out.println("Hello World");

//Sample Program
public class HelloJava{
	public static void main(String[] args){
		System.out.print.ln("Hello Java");
		//Comment
	}
}

//Variable:
	test(String)
	number(int)
	floating-number(double)
	true/false(boolean)

	String text = "contains text";
	int wholeNumber = 123;
	double floatingPoint = 3.141592653;
	boolean trueOrFalse = true;

		//Primitive and reference variables

	int value = 10; <- value: Primitive variable
	System.out.println(value);

	Name luke = new Name("Luke"); <-luke: Reference variable
	System.out.println(luke);

	* Name@4aa298b7 tells us that the given variable is of type Name and its identifier is 4aa298b7
	we can overload this using
	public string toString(){
		return this.name;
	}

	* Java has 8 different primitive variables:
	boolean (a truth value: either true or false)
	byte (a byte containing 8 bits, between the values -128 and 127)
	char (a 16-bit value representing a single character)
	short (a 16-bit value that represents a small integer, between the values -32768 and 32767)
	int (a 32-bit value that represents a medium-sized integer, between the values -231 and 231-1)
	long (a 64-bit value that represents a large integer, between values -263 and 263-1)
	float (a floating-point number that uses 32 bits)
	double (a floating-point number that uses 64 bits)

//Condition:
	int number = 4;

	if (number > 5) {
    		System.out.println("Your number is greater than five!");
	}else if (number == 2) {
    		System.out.println("The given number is two");
	} else {
    		System.out.println("Your number is five or less!");
	}

	boolean isItTrue = true;
	if (isItTrue) {
    		System.out.println("Pretty wild!");
	}

	if (first.equals(second)) {
    		System.out.println("The strings were the same!");
	} else {
    		System.out.println("The strings were different!");
	}

	boolean isLessThan = first < second;

//Compare:
    >  greater than
    >=  greater than or equal to
    <   less than
    <=  less than or equal to
    ==  equal to
    !=  not equal to
    .equals
    .isEmpty()

//Logical Operator:
 	&&
 	||
 	!

//Reading input & Object
import java.util.Scanner
public class Program {

    public static void main(String[] args) {
    	// read is Object
        Scanner read = new Scanner(System.in);
        String msg=read.nextLine();

        System.out.println(msg);
    }
}


//Method + ArrayList + Loop
list.get(index)
list.remove(2);
list.remove(Integer.valueOf(15));
list.remove("First");
boolean found = list.contains("Second");
if (found) {
    System.out.println("Second was found");
}
if (list.contains("Second")) {
    System.out.println("Second can still be found");
}

ArrayList<String> sipun=new ArrayList<>();
import java.util.Arraylist;
public class ReadList{
	public static void main(String[] args){
		ArrayList<String> sipunList=new ArrayList<>();
		sipunList.add("s1");
		sipunList.add("s2");
		sipunList.add("s1");

		printList(sipunList);
	}

	public static void printList(ArrayList<String> list){
		int index=0;

		while(index < list.size()){
			System.out.println(list.get(index));
			index++;
		}

		for(int i=0;i<list.size();i++){
			System.out.println(list.get(i));
		}

		for(String i;list){
			System.out.println(i);
		}
	}
}


//Object
An object is always instantiated by calling a method that created an object, i.e., a constructor by using the new keyword.

//Return
	public static void main(String[] args) {
	    int number = alwaysReturnsTen();
	    System.out.println("the method returned the number " + number);
	    int num = alwaysReturnsTen();
	}
	public static int alwaysReturnsTen() {
	    return 10;
	}


	ArrayList<Person> records = readRecordsFromFile(file);
	public static ArrayList<Person> readRecordsFromFile(String file) {

//Array
	int number=new int[3]
	String msg=new String[2]
	double[] approximations = new double[100];

	months[0] = "January";
	months[2] = "Mar";

	int[] numbers = {100,  1,  42,  23,  1,  1, 3200, 3201};
	int index = 0;
	while (index < numbers.length) {
	    System.out.println(numbers[index]);
	    index++;
	for(int i:numbers){
 		System.out.print(i+" ")
 		}
//Swap
    int a=numbers[x];
    numbers[x]=numbers[y];
    numbers[y]=a;

//Character
	String text = "Hello world!";
	char character = text.charAt(0);
	System.out.println(character);
	OP-> H